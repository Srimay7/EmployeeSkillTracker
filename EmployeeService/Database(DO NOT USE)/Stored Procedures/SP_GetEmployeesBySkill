CREATE PROCEDURE SP_GetEmployeesBySkill
    @SkillName NVARCHAR(255) = NULL,
    @SkillCategory NVARCHAR(255) = NULL,
    @Department NVARCHAR(255) = NULL,
    @PageSize INT = 10,
    @PageNumber INT = 1,
    @Sorting NVARCHAR(50) = 'DateCreated',
    @SortOrder NVARCHAR(4) = 'DESC'
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @SQLQuery NVARCHAR(MAX);

    SET @SQLQuery = '
    WITH EmployeeResults AS (
        SELECT DISTINCT 
            e.EmployeeId,
            e.Name,
            e.Department,
            STRING_AGG(s.Name, '' | '') AS Skills,
            STRING_AGG(CAST(s.SkillId AS NVARCHAR), '' | '') AS SkillIds,
            s.Category
        FROM Employees e
        LEFT JOIN EmployeeSkills es ON e.EmployeeId = es.EmployeeId
        LEFT JOIN Skills s ON es.SkillId = s.SkillId
        WHERE e.IsDeleted = 0 '; 

    -- Append filtering conditions
    IF @SkillName IS NOT NULL AND @SkillName <> ''
        SET @SQLQuery = @SQLQuery + ' AND s.Name LIKE ''%'' + @SkillName + ''%'' ';

    IF @SkillCategory IS NOT NULL AND @SkillCategory <> ''
        SET @SQLQuery = @SQLQuery + ' AND s.Category LIKE ''%'' + @SkillCategory + ''%'' ';

    IF @Department IS NOT NULL AND @Department <> ''
        SET @SQLQuery = @SQLQuery + ' AND e.Department LIKE ''%'' + @Department + ''%'' ';

    SET @SQLQuery = @SQLQuery + '
        GROUP BY e.EmployeeId, e.Name, e.Department, s.SkillId, s.Category
    )
    SELECT * FROM EmployeeResults
    ORDER BY ' + QUOTENAME(@Sorting) + ' ' + @SortOrder + '
    OFFSET (@PageNumber - 1) * @PageSize ROWS
    FETCH NEXT @PageSize ROWS ONLY;';

    EXEC sp_executesql @SQLQuery, 
        N'@SkillName NVARCHAR(255), @SkillCategory NVARCHAR(255), @Department NVARCHAR(255), 
          @PageSize INT, @PageNumber INT',
        @SkillName, @SkillCategory, @Department, @PageSize, @PageNumber;
END;
